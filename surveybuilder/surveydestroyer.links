# In this file take place all the operations connected with the removal of a single survey and all information with this survey connected from database. At first are being removed respondent answers on the given questions, then the questions themselves are being removed. The next thung to delete are respondents who took part in this survey and finally the entry connected with the indicated survey is removed from surveys table.


# Variables used in database operations.
var db = database "surveybuilder";

var readysurveys =
    table "surveys"
    with (id : Int,
	  name : String,
	  textareasno : Int
    	  ) from db;

var surveyrespondents =
	table "surveyrespondents"
	with (
	id : Int,
	surveyid : Int,
	name : String
	) from db;

var questions =
	table "textareas"
    with (
      id : Int,
	  surveyid : Int,
	  questioncontent : String
    	  ) from db;

var answers =
	table "textareaentries"
	with
	(
	id : Int,
	textareaid : Int,
	respondendid : Int,
	answer : String
	) from db;

var readycheckboxquestions = 
    table "checkboxquestions"
    with (
    id : Int,
    surveyid : Int,
    checkboxcontent : String
    ) from db;

var readycheckboxoptions = 
    table "checkboxoptions"
    with (
    id : Int,
    questionid : Int,
    optioncontent : String
    ) from db;

var readycheckboxdbentries =
    table "checkboxentries"
    with (
    id : Int,
    optionid : Int,
    respondendid : Int,
    optionvalue : Int
    ) from db;

fun getSurvey(surveyselected)
{
	if (length(surveyselected) > 0){
	var selectedsurveyid = hd(surveyselected);
	for (s <-- readysurveys)
  	where (s.id == stringToInt(selectedsurveyid))
    [("id"=s.id, "name"=s.name, "textareasno"=s.textareasno)]
    }
    else
    {
    []
    }
}

fun removeSurvey(surveyId)
{
	delete (r <-- readysurveys) where (r.id == surveyId); 
	()
}

fun removeRespondents(surveyId)
{
	delete (r <-- surveyrespondents) where (r.surveyid == surveyId); 
	()
}

fun removeTextAreas(surveyId)
{
	var itiskindofmagic = for (x <- query
	{
	for (x <-- questions) where (x.surveyid == surveyId) [x]
	})
	{
	delete (r <-- answers) where (r.textareaid == x.id); 
	[]
	};
	delete (r <-- questions) where (r.surveyid == surveyId); 
	()
}

fun deleteCheckBoxesEntry(questionId)
{
	var amg = for (r <- query {for (r <-- readycheckboxoptions) where (r.questionid == questionId) [r] })
	{
			delete (z <-- readycheckboxdbentries) where (z.optionid == r.id);
			[] 
	};
	()
}

fun removeCheckBoxes(surveyId)
{
	var itisgonnabehard = for ( x <- query
	{
	for (x <-- readycheckboxquestions) where (x.surveyid == surveyId) [x]
	})
	{
		deleteCheckBoxesEntry(x.id);
		delete (y <-- readycheckboxoptions) where (y.questionid == x.id); 
		[]
	};
	delete (p <-- readycheckboxquestions) where (p.surveyid == surveyId); 
	()
}


fun main() {

var env = environment();
var srvopt = for ((x,y) <- env) where (x == "surveyId") [y]; 
var srvnLst = getSurvey(srvopt);
var selectedsrv = if (length(srvnLst) > 0)
 {
 	hd(srvnLst)
 }
 else
 {
 	("id"=0, "name"="takiegoimienianiktnienada", "textareasno"=0)
 };


if (selectedsrv.id <> 0)
{

#remove checkboxes
removeCheckBoxes(selectedsrv.id);
#remove textareas and their entries
removeTextAreas(selectedsrv.id);
#remove respondents of the survey
removeRespondents(selectedsrv.id);
#remove survey itself
removeSurvey(selectedsrv.id);


page
<html> 
 <title>SurveyBuilder</title>
 <body bgcolor="#ffffff">    

 <h1>SurveyDestroyer</h1>



<p>Your survey has been successfully removed. To go back to the SurveyBuilder survey management system click <a href="surveybuilder.links">here</a>.</p>


</body>				  
</html>

}
else
{

page
<html> 
 <title>SurveyBuilder</title>
 <body bgcolor="#ffffff">    

 <h1>SurveyDestroyer</h1>



<p>To remove the survey you need to pass the proper ID of this survey. To go back to the SurveyBuilder survey management system click <a href="surveybuilder.links">here</a>.</p>


</body>				  
</html>

}

}

main()